name: Release Package

# Trigger on all version tags
on:
  push:
    tags:
      - "v*"   # matches v1.0.0, v1.0.1-beta, etc.

# Ensure token has permissions to create releases
permissions:
  contents: write  # Required for GitHub release creation

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # 3Ô∏è‚É£ Install build tools
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # 4Ô∏è‚É£ Build the package
      - name: Build package
        run: python -m build

      # 5Ô∏è‚É£ Upload dist/* as artifact
      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }}
          path: dist/*

      # 6Ô∏è‚É£ Conditional publish: TestPyPI for pre-releases
      - name: Publish to TestPyPI
        if: contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      # 7Ô∏è‚É£ Conditional publish: PyPI for main releases
      - name: Publish to PyPI
        if: !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'alpha')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      # 8Ô∏è‚É£ Download the artifact for GitHub release
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.ref_name }}
          path: dist

      # 9Ô∏è‚É£ Create GitHub release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
          body: |
            üöÄ Release ${{ github.ref_name }}

            - Published automatically to TestPyPI/PyPI
            - Artifacts are attached below
          files: dist/*
        env:
          # Use PAT if default GITHUB_TOKEN fails
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
